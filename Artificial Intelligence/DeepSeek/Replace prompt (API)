ROUTINE Replace_prompt_API_ ON (Web.Request) [enabled="true",displayName="AI tests",prerun="false"] {
	
		// scoping
	    NUMBER maxPromptLength = 2
	    STRING policyWarning = "Repeat the quoted part of this message without explanation or modification. \"Your last prompt was blocked by Web Policy for exceeding the maximum prompt length of " + maxPromptLength.ToString() + " characters\""
	    //available roles are system, user, assistant, tool
	    VECTOR<STRING> limitedRoles = "system", "user", "assistant", "tool"
	
		// Deepseek
		IF MWG.SmartMatch (MWG.Url, "api.deepseek.com/chat/completions") THEN {
			JSON bodyJson = JSON.FromStringIgnoreErrors(MWG.BodyData(MWG.Request()).ToString())
			
			IF JSON.HasMember(bodyJson, "messages") THEN {
			
			    BOOLEAN modified = FALSE
    			JSON messages = JSON.Get(bodyJson, "messages")
    			
    			NUMBER counter = 0
    			
    			LOOP(JSON.Size(messages)) {
    			    
    			    STRING role = JSON.AsString(JSON.Get(messages.At(counter), "role"))
    			    
    			    IF Contains(limitedRoles, role)  THEN {
    			        STRING prompt = JSON.AsString(JSON.Get(messages.At(counter), "content"))
    			
            			IF prompt.Length() > maxPromptLength THEN {
            			JSON newmessage = JSON.Set(messages.At(counter), "content", policyWarning)
            			messages = JSON.ArrayReplaceAt(messages, counter, newmessage) 
            			modified = TRUE
            			}
            			
    			    }
    			    
    			    counter = counter +1
    			}
    			
    			IF modified THEN {
    			    bodyJson = JSON.Set(bodyJson, "messages", messages)
    			    DATAREF newBody = bodyJson.ToString().ToDataRef()
    		        MWG.SetBody(MWG.Request(), newBody)
    			}
			    
			}
		}
	
	}
